Grammar

    0 $accept: program $end

    1 program: func_def

    2 func_def: "def" header ':' func_list stmt_list "end"

    3 func_list: %empty
    4          | func_list func_def
    5          | func_list func_decl
    6          | func_list var_def

    7 header: type T_id '(' maybe_formal ')'
    8       | T_id '(' maybe_formal ')'

    9 maybe_formal: formal_list
   10             | %empty

   11 formal_list: formal
   12            | formal_list ';' formal

   13 formal: "ref" type id_list
   14       | type id_list

   15 id_list: T_id
   16        | id_list ',' T_id

   17 type: "int"
   18     | "bool"
   19     | "char"
   20     | type '[' ']'
   21     | "list" '[' type ']'

   22 func_decl: "decl" header

   23 var_def: type id_list

   24 stmt_list: stmt
   25          | stmt_list stmt

   26 stmt: simple
   27     | "exit"
   28     | "return" expr
   29     | if_statement
   30     | for_statement

   31 if_statement: "if" expr ':' stmt_list elsif_statement else_statement "end"

   32 elsif_statement: %empty
   33                | elsif_statement "elsif" expr ':' stmt_list

   34 else_statement: "else" ':' stmt_list
   35               | %empty

   36 for_statement: "for" simple_list ';' expr ';' simple_list ':' stmt_list "end"

   37 simple_list: simple
   38            | simple_list ',' simple

   39 simple: "skip"
   40       | atom ":=" expr
   41       | call

   42 call: T_id '(' expr_list ')'
   43     | T_id '(' ')'

   44 expr_list: expr
   45          | expr_list ',' expr

   46 atom: T_id
   47     | T_string
   48     | atom '[' expr ']'
   49     | call

   50 expr: atom
   51     | T_constInt
   52     | T_constChar
   53     | '(' expr ')'
   54     | '+' expr
   55     | '-' expr
   56     | expr '+' expr
   57     | expr '-' expr
   58     | expr '*' expr
   59     | expr '/' expr
   60     | expr "mod" expr
   61     | expr '=' expr
   62     | expr "<>" expr
   63     | expr '<' expr
   64     | expr '>' expr
   65     | expr "<=" expr
   66     | expr ">=" expr
   67     | "not" expr
   68     | expr "and" expr
   69     | expr "or" expr
   70     | "true"
   71     | "false"
   72     | "new" type '[' expr ']'
   73     | "nil"
   74     | "nil?" '(' expr ')'
   75     | expr '#' expr
   76     | "head" '(' expr ')'
   77     | "tail" '(' expr ')'


Terminals, with rules where they appear

    $end (0) 0
    '#' <cstr> (35) 75
    '(' (40) 7 8 42 43 53 74 76 77
    ')' (41) 7 8 42 43 53 74 76 77
    '*' <cstr> (42) 58
    '+' <cstr> (43) 54 56
    ',' (44) 16 38 45
    '-' <cstr> (45) 55 57
    '/' <cstr> (47) 59
    ':' (58) 2 31 33 34 36
    ';' (59) 12 36
    '<' <cstr> (60) 63
    '=' <cstr> (61) 61
    '>' <cstr> (62) 64
    '[' (91) 20 21 48 72
    ']' (93) 20 21 48 72
    error (256)
    "and" <cstr> (258) 68
    "bool" (259) 18
    "char" (260) 19
    "decl" (261) 22
    "def" (262) 2
    "else" (263) 34
    "elsif" (264) 33
    "end" (265) 2 31 36
    "exit" (266) 27
    "false" (267) 71
    "for" (268) 36
    "head" (269) 76
    "if" (270) 31
    "int" (271) 17
    "list" (272) 21
    "mod" <cstr> (273) 60
    "new" (274) 72
    "nil" (275) 73
    "nil?" (276) 74
    "not" <cstr> (277) 67
    "or" <cstr> (278) 69
    "ref" (279) 13
    "return" (280) 28
    "skip" (281) 39
    "tail" (282) 77
    "true" (283) 70
    "<=" <cstr> (284) 65
    ">=" <cstr> (285) 66
    "<>" <cstr> (286) 62
    ":=" (287) 40
    T_id <cstr> (288) 7 8 15 16 42 43 46
    T_string <cstr> (289) 47
    T_constInt <cint> (290) 51
    T_constChar <cchar> (291) 52
    PLUS_SIGN (292)
    MINUS_SIGN (293)


Nonterminals, with rules where they appear

    $accept (54)
        on left: 0
    program (55)
        on left: 1
        on right: 0
    func_def <def> (56)
        on left: 2
        on right: 1 4
    func_list <defl> (57)
        on left: 3 4 5 6
        on right: 2 4 5 6
    header <h> (58)
        on left: 7 8
        on right: 2 22
    maybe_formal <fl> (59)
        on left: 9 10
        on right: 7 8
    formal_list <fl> (60)
        on left: 11 12
        on right: 9 12
    formal <frml> (61)
        on left: 13 14
        on right: 11 12
    id_list <idl> (62)
        on left: 15 16
        on right: 13 14 16 23
    type <type> (63)
        on left: 17 18 19 20 21
        on right: 7 13 14 20 21 23 72
    func_decl <def> (64)
        on left: 22
        on right: 5
    var_def <def> (65)
        on left: 23
        on right: 6
    stmt_list <stmtl> (66)
        on left: 24 25
        on right: 2 25 31 33 34 36
    stmt <stmt> (67)
        on left: 26 27 28 29 30
        on right: 24 25
    if_statement <brn> (68)
        on left: 31
        on right: 29
    elsif_statement <brnl> (69)
        on left: 32 33
        on right: 31 33
    else_statement <brn> (70)
        on left: 34 35
        on right: 31
    for_statement <stmt> (71)
        on left: 36
        on right: 30
    simple_list <siml> (72)
        on left: 37 38
        on right: 36 38
    simple <sim> (73)
        on left: 39 40 41
        on right: 26 37 38
    call <call> (74)
        on left: 42 43
        on right: 41 49
    expr_list <exprl> (75)
        on left: 44 45
        on right: 42 45
    atom <atom> (76)
        on left: 46 47 48 49
        on right: 40 48 50
    expr <expr> (77)
        on left: 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77
        on right: 28 31 33 36 40 44 45 48 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 72 74 75 76 77


State 0

    0 $accept: . program $end

    "def"  shift, and go to state 1

    program   go to state 2
    func_def  go to state 3


State 1

    2 func_def: "def" . header ':' func_list stmt_list "end"

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7
    T_id    shift, and go to state 8

    header  go to state 9
    type    go to state 10


State 2

    0 $accept: program . $end

    $end  shift, and go to state 11


State 3

    1 program: func_def .

    $default  reduce using rule 1 (program)


State 4

   18 type: "bool" .

    $default  reduce using rule 18 (type)


State 5

   19 type: "char" .

    $default  reduce using rule 19 (type)


State 6

   17 type: "int" .

    $default  reduce using rule 17 (type)


State 7

   21 type: "list" . '[' type ']'

    '['  shift, and go to state 12


State 8

    8 header: T_id . '(' maybe_formal ')'

    '('  shift, and go to state 13


State 9

    2 func_def: "def" header . ':' func_list stmt_list "end"

    ':'  shift, and go to state 14


State 10

    7 header: type . T_id '(' maybe_formal ')'
   20 type: type . '[' ']'

    T_id  shift, and go to state 15
    '['   shift, and go to state 16


State 11

    0 $accept: program $end .

    $default  accept


State 12

   21 type: "list" '[' . type ']'

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7

    type  go to state 17


State 13

    8 header: T_id '(' . maybe_formal ')'

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7
    "ref"   shift, and go to state 18

    $default  reduce using rule 10 (maybe_formal)

    maybe_formal  go to state 19
    formal_list   go to state 20
    formal        go to state 21
    type          go to state 22


State 14

    2 func_def: "def" header ':' . func_list stmt_list "end"

    $default  reduce using rule 3 (func_list)

    func_list  go to state 23


State 15

    7 header: type T_id . '(' maybe_formal ')'

    '('  shift, and go to state 24


State 16

   20 type: type '[' . ']'

    ']'  shift, and go to state 25


State 17

   20 type: type . '[' ']'
   21     | "list" '[' type . ']'

    '['  shift, and go to state 16
    ']'  shift, and go to state 26


State 18

   13 formal: "ref" . type id_list

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7

    type  go to state 27


State 19

    8 header: T_id '(' maybe_formal . ')'

    ')'  shift, and go to state 28


State 20

    9 maybe_formal: formal_list .
   12 formal_list: formal_list . ';' formal

    ';'  shift, and go to state 29

    $default  reduce using rule 9 (maybe_formal)


State 21

   11 formal_list: formal .

    $default  reduce using rule 11 (formal_list)


State 22

   14 formal: type . id_list
   20 type: type . '[' ']'

    T_id  shift, and go to state 30
    '['   shift, and go to state 16

    id_list  go to state 31


State 23

    2 func_def: "def" header ':' func_list . stmt_list "end"
    4 func_list: func_list . func_def
    5          | func_list . func_decl
    6          | func_list . var_def

    "bool"    shift, and go to state 4
    "char"    shift, and go to state 5
    "decl"    shift, and go to state 32
    "def"     shift, and go to state 1
    "exit"    shift, and go to state 33
    "for"     shift, and go to state 34
    "if"      shift, and go to state 35
    "int"     shift, and go to state 6
    "list"    shift, and go to state 7
    "return"  shift, and go to state 36
    "skip"    shift, and go to state 37
    T_id      shift, and go to state 38
    T_string  shift, and go to state 39

    func_def       go to state 40
    type           go to state 41
    func_decl      go to state 42
    var_def        go to state 43
    stmt_list      go to state 44
    stmt           go to state 45
    if_statement   go to state 46
    for_statement  go to state 47
    simple         go to state 48
    call           go to state 49
    atom           go to state 50


State 24

    7 header: type T_id '(' . maybe_formal ')'

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7
    "ref"   shift, and go to state 18

    $default  reduce using rule 10 (maybe_formal)

    maybe_formal  go to state 51
    formal_list   go to state 20
    formal        go to state 21
    type          go to state 22


State 25

   20 type: type '[' ']' .

    $default  reduce using rule 20 (type)


State 26

   21 type: "list" '[' type ']' .

    $default  reduce using rule 21 (type)


State 27

   13 formal: "ref" type . id_list
   20 type: type . '[' ']'

    T_id  shift, and go to state 30
    '['   shift, and go to state 16

    id_list  go to state 52


State 28

    8 header: T_id '(' maybe_formal ')' .

    $default  reduce using rule 8 (header)


State 29

   12 formal_list: formal_list ';' . formal

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7
    "ref"   shift, and go to state 18

    formal  go to state 53
    type    go to state 22


State 30

   15 id_list: T_id .

    $default  reduce using rule 15 (id_list)


State 31

   14 formal: type id_list .
   16 id_list: id_list . ',' T_id

    ','  shift, and go to state 54

    $default  reduce using rule 14 (formal)


State 32

   22 func_decl: "decl" . header

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7
    T_id    shift, and go to state 8

    header  go to state 55
    type    go to state 10


State 33

   27 stmt: "exit" .

    $default  reduce using rule 27 (stmt)


State 34

   36 for_statement: "for" . simple_list ';' expr ';' simple_list ':' stmt_list "end"

    "skip"    shift, and go to state 37
    T_id      shift, and go to state 38
    T_string  shift, and go to state 39

    simple_list  go to state 56
    simple       go to state 57
    call         go to state 49
    atom         go to state 50


State 35

   31 if_statement: "if" . expr ':' stmt_list elsif_statement else_statement "end"

    "false"      shift, and go to state 58
    "head"       shift, and go to state 59
    "new"        shift, and go to state 60
    "nil"        shift, and go to state 61
    "nil?"       shift, and go to state 62
    "not"        shift, and go to state 63
    "tail"       shift, and go to state 64
    "true"       shift, and go to state 65
    T_id         shift, and go to state 38
    T_string     shift, and go to state 39
    T_constInt   shift, and go to state 66
    T_constChar  shift, and go to state 67
    '+'          shift, and go to state 68
    '-'          shift, and go to state 69
    '('          shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 73


State 36

   28 stmt: "return" . expr

    "false"      shift, and go to state 58
    "head"       shift, and go to state 59
    "new"        shift, and go to state 60
    "nil"        shift, and go to state 61
    "nil?"       shift, and go to state 62
    "not"        shift, and go to state 63
    "tail"       shift, and go to state 64
    "true"       shift, and go to state 65
    T_id         shift, and go to state 38
    T_string     shift, and go to state 39
    T_constInt   shift, and go to state 66
    T_constChar  shift, and go to state 67
    '+'          shift, and go to state 68
    '-'          shift, and go to state 69
    '('          shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 74


State 37

   39 simple: "skip" .

    $default  reduce using rule 39 (simple)


State 38

   42 call: T_id . '(' expr_list ')'
   43     | T_id . '(' ')'
   46 atom: T_id .

    '('  shift, and go to state 75

    $default  reduce using rule 46 (atom)


State 39

   47 atom: T_string .

    $default  reduce using rule 47 (atom)


State 40

    4 func_list: func_list func_def .

    $default  reduce using rule 4 (func_list)


State 41

   20 type: type . '[' ']'
   23 var_def: type . id_list

    T_id  shift, and go to state 30
    '['   shift, and go to state 16

    id_list  go to state 76


State 42

    5 func_list: func_list func_decl .

    $default  reduce using rule 5 (func_list)


State 43

    6 func_list: func_list var_def .

    $default  reduce using rule 6 (func_list)


State 44

    2 func_def: "def" header ':' func_list stmt_list . "end"
   25 stmt_list: stmt_list . stmt

    "end"     shift, and go to state 77
    "exit"    shift, and go to state 33
    "for"     shift, and go to state 34
    "if"      shift, and go to state 35
    "return"  shift, and go to state 36
    "skip"    shift, and go to state 37
    T_id      shift, and go to state 38
    T_string  shift, and go to state 39

    stmt           go to state 78
    if_statement   go to state 46
    for_statement  go to state 47
    simple         go to state 48
    call           go to state 49
    atom           go to state 50


State 45

   24 stmt_list: stmt .

    $default  reduce using rule 24 (stmt_list)


State 46

   29 stmt: if_statement .

    $default  reduce using rule 29 (stmt)


State 47

   30 stmt: for_statement .

    $default  reduce using rule 30 (stmt)


State 48

   26 stmt: simple .

    $default  reduce using rule 26 (stmt)


State 49

   41 simple: call .
   49 atom: call .

    ":="      reduce using rule 49 (atom)
    '['       reduce using rule 49 (atom)
    $default  reduce using rule 41 (simple)


State 50

   40 simple: atom . ":=" expr
   48 atom: atom . '[' expr ']'

    ":="  shift, and go to state 79
    '['   shift, and go to state 80


State 51

    7 header: type T_id '(' maybe_formal . ')'

    ')'  shift, and go to state 81


State 52

   13 formal: "ref" type id_list .
   16 id_list: id_list . ',' T_id

    ','  shift, and go to state 54

    $default  reduce using rule 13 (formal)


State 53

   12 formal_list: formal_list ';' formal .

    $default  reduce using rule 12 (formal_list)


State 54

   16 id_list: id_list ',' . T_id

    T_id  shift, and go to state 82


State 55

   22 func_decl: "decl" header .

    $default  reduce using rule 22 (func_decl)


State 56

   36 for_statement: "for" simple_list . ';' expr ';' simple_list ':' stmt_list "end"
   38 simple_list: simple_list . ',' simple

    ';'  shift, and go to state 83
    ','  shift, and go to state 84


State 57

   37 simple_list: simple .

    $default  reduce using rule 37 (simple_list)


State 58

   71 expr: "false" .

    $default  reduce using rule 71 (expr)


State 59

   76 expr: "head" . '(' expr ')'

    '('  shift, and go to state 85


State 60

   72 expr: "new" . type '[' expr ']'

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7

    type  go to state 86


State 61

   73 expr: "nil" .

    $default  reduce using rule 73 (expr)


State 62

   74 expr: "nil?" . '(' expr ')'

    '('  shift, and go to state 87


State 63

   67 expr: "not" . expr

    "false"      shift, and go to state 58
    "head"       shift, and go to state 59
    "new"        shift, and go to state 60
    "nil"        shift, and go to state 61
    "nil?"       shift, and go to state 62
    "not"        shift, and go to state 63
    "tail"       shift, and go to state 64
    "true"       shift, and go to state 65
    T_id         shift, and go to state 38
    T_string     shift, and go to state 39
    T_constInt   shift, and go to state 66
    T_constChar  shift, and go to state 67
    '+'          shift, and go to state 68
    '-'          shift, and go to state 69
    '('          shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 88


State 64

   77 expr: "tail" . '(' expr ')'

    '('  shift, and go to state 89


State 65

   70 expr: "true" .

    $default  reduce using rule 70 (expr)


State 66

   51 expr: T_constInt .

    $default  reduce using rule 51 (expr)


State 67

   52 expr: T_constChar .

    $default  reduce using rule 52 (expr)


State 68

   54 expr: '+' . expr

    "false"      shift, and go to state 58
    "head"       shift, and go to state 59
    "new"        shift, and go to state 60
    "nil"        shift, and go to state 61
    "nil?"       shift, and go to state 62
    "not"        shift, and go to state 63
    "tail"       shift, and go to state 64
    "true"       shift, and go to state 65
    T_id         shift, and go to state 38
    T_string     shift, and go to state 39
    T_constInt   shift, and go to state 66
    T_constChar  shift, and go to state 67
    '+'          shift, and go to state 68
    '-'          shift, and go to state 69
    '('          shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 90


State 69

   55 expr: '-' . expr

    "false"      shift, and go to state 58
    "head"       shift, and go to state 59
    "new"        shift, and go to state 60
    "nil"        shift, and go to state 61
    "nil?"       shift, and go to state 62
    "not"        shift, and go to state 63
    "tail"       shift, and go to state 64
    "true"       shift, and go to state 65
    T_id         shift, and go to state 38
    T_string     shift, and go to state 39
    T_constInt   shift, and go to state 66
    T_constChar  shift, and go to state 67
    '+'          shift, and go to state 68
    '-'          shift, and go to state 69
    '('          shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 91


State 70

   53 expr: '(' . expr ')'

    "false"      shift, and go to state 58
    "head"       shift, and go to state 59
    "new"        shift, and go to state 60
    "nil"        shift, and go to state 61
    "nil?"       shift, and go to state 62
    "not"        shift, and go to state 63
    "tail"       shift, and go to state 64
    "true"       shift, and go to state 65
    T_id         shift, and go to state 38
    T_string     shift, and go to state 39
    T_constInt   shift, and go to state 66
    T_constChar  shift, and go to state 67
    '+'          shift, and go to state 68
    '-'          shift, and go to state 69
    '('          shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 92


State 71

   49 atom: call .

    $default  reduce using rule 49 (atom)


State 72

   48 atom: atom . '[' expr ']'
   50 expr: atom .

    '['  shift, and go to state 80

    $default  reduce using rule 50 (expr)


State 73

   31 if_statement: "if" expr . ':' stmt_list elsif_statement else_statement "end"
   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . "mod" expr
   61     | expr . '=' expr
   62     | expr . "<>" expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . "<=" expr
   66     | expr . ">=" expr
   68     | expr . "and" expr
   69     | expr . "or" expr
   75     | expr . '#' expr

    "and"  shift, and go to state 93
    "mod"  shift, and go to state 94
    "or"   shift, and go to state 95
    "<="   shift, and go to state 96
    ">="   shift, and go to state 97
    "<>"   shift, and go to state 98
    '='    shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    ':'    shift, and go to state 107


State 74

   28 stmt: "return" expr .
   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . "mod" expr
   61     | expr . '=' expr
   62     | expr . "<>" expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . "<=" expr
   66     | expr . ">=" expr
   68     | expr . "and" expr
   69     | expr . "or" expr
   75     | expr . '#' expr

    "and"  shift, and go to state 93
    "mod"  shift, and go to state 94
    "or"   shift, and go to state 95
    "<="   shift, and go to state 96
    ">="   shift, and go to state 97
    "<>"   shift, and go to state 98
    '='    shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106

    $default  reduce using rule 28 (stmt)


State 75

   42 call: T_id '(' . expr_list ')'
   43     | T_id '(' . ')'

    "false"      shift, and go to state 58
    "head"       shift, and go to state 59
    "new"        shift, and go to state 60
    "nil"        shift, and go to state 61
    "nil?"       shift, and go to state 62
    "not"        shift, and go to state 63
    "tail"       shift, and go to state 64
    "true"       shift, and go to state 65
    T_id         shift, and go to state 38
    T_string     shift, and go to state 39
    T_constInt   shift, and go to state 66
    T_constChar  shift, and go to state 67
    '+'          shift, and go to state 68
    '-'          shift, and go to state 69
    '('          shift, and go to state 70
    ')'          shift, and go to state 108

    call       go to state 71
    expr_list  go to state 109
    atom       go to state 72
    expr       go to state 110


State 76

   16 id_list: id_list . ',' T_id
   23 var_def: type id_list .

    ','  shift, and go to state 54

    $default  reduce using rule 23 (var_def)


State 77

    2 func_def: "def" header ':' func_list stmt_list "end" .

    $default  reduce using rule 2 (func_def)


State 78

   25 stmt_list: stmt_list stmt .

    $default  reduce using rule 25 (stmt_list)


State 79

   40 simple: atom ":=" . expr

    "false"      shift, and go to state 58
    "head"       shift, and go to state 59
    "new"        shift, and go to state 60
    "nil"        shift, and go to state 61
    "nil?"       shift, and go to state 62
    "not"        shift, and go to state 63
    "tail"       shift, and go to state 64
    "true"       shift, and go to state 65
    T_id         shift, and go to state 38
    T_string     shift, and go to state 39
    T_constInt   shift, and go to state 66
    T_constChar  shift, and go to state 67
    '+'          shift, and go to state 68
    '-'          shift, and go to state 69
    '('          shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 111


State 80

   48 atom: atom '[' . expr ']'

    "false"      shift, and go to state 58
    "head"       shift, and go to state 59
    "new"        shift, and go to state 60
    "nil"        shift, and go to state 61
    "nil?"       shift, and go to state 62
    "not"        shift, and go to state 63
    "tail"       shift, and go to state 64
    "true"       shift, and go to state 65
    T_id         shift, and go to state 38
    T_string     shift, and go to state 39
    T_constInt   shift, and go to state 66
    T_constChar  shift, and go to state 67
    '+'          shift, and go to state 68
    '-'          shift, and go to state 69
    '('          shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 112


State 81

    7 header: type T_id '(' maybe_formal ')' .

    $default  reduce using rule 7 (header)


State 82

   16 id_list: id_list ',' T_id .

    $default  reduce using rule 16 (id_list)


State 83

   36 for_statement: "for" simple_list ';' . expr ';' simple_list ':' stmt_list "end"

    "false"      shift, and go to state 58
    "head"       shift, and go to state 59
    "new"        shift, and go to state 60
    "nil"        shift, and go to state 61
    "nil?"       shift, and go to state 62
    "not"        shift, and go to state 63
    "tail"       shift, and go to state 64
    "true"       shift, and go to state 65
    T_id         shift, and go to state 38
    T_string     shift, and go to state 39
    T_constInt   shift, and go to state 66
    T_constChar  shift, and go to state 67
    '+'          shift, and go to state 68
    '-'          shift, and go to state 69
    '('          shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 113


State 84

   38 simple_list: simple_list ',' . simple

    "skip"    shift, and go to state 37
    T_id      shift, and go to state 38
    T_string  shift, and go to state 39

    simple  go to state 114
    call    go to state 49
    atom    go to state 50


State 85

   76 expr: "head" '(' . expr ')'

    "false"      shift, and go to state 58
    "head"       shift, and go to state 59
    "new"        shift, and go to state 60
    "nil"        shift, and go to state 61
    "nil?"       shift, and go to state 62
    "not"        shift, and go to state 63
    "tail"       shift, and go to state 64
    "true"       shift, and go to state 65
    T_id         shift, and go to state 38
    T_string     shift, and go to state 39
    T_constInt   shift, and go to state 66
    T_constChar  shift, and go to state 67
    '+'          shift, and go to state 68
    '-'          shift, and go to state 69
    '('          shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 115


State 86

   20 type: type . '[' ']'
   72 expr: "new" type . '[' expr ']'

    '['  shift, and go to state 116


State 87

   74 expr: "nil?" '(' . expr ')'

    "false"      shift, and go to state 58
    "head"       shift, and go to state 59
    "new"        shift, and go to state 60
    "nil"        shift, and go to state 61
    "nil?"       shift, and go to state 62
    "not"        shift, and go to state 63
    "tail"       shift, and go to state 64
    "true"       shift, and go to state 65
    T_id         shift, and go to state 38
    T_string     shift, and go to state 39
    T_constInt   shift, and go to state 66
    T_constChar  shift, and go to state 67
    '+'          shift, and go to state 68
    '-'          shift, and go to state 69
    '('          shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 117


State 88

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . "mod" expr
   61     | expr . '=' expr
   62     | expr . "<>" expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . "<=" expr
   66     | expr . ">=" expr
   67     | "not" expr .
   68     | expr . "and" expr
   69     | expr . "or" expr
   75     | expr . '#' expr

    "mod"  shift, and go to state 94
    "<="   shift, and go to state 96
    ">="   shift, and go to state 97
    "<>"   shift, and go to state 98
    '='    shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106

    $default  reduce using rule 67 (expr)


State 89

   77 expr: "tail" '(' . expr ')'

    "false"      shift, and go to state 58
    "head"       shift, and go to state 59
    "new"        shift, and go to state 60
    "nil"        shift, and go to state 61
    "nil?"       shift, and go to state 62
    "not"        shift, and go to state 63
    "tail"       shift, and go to state 64
    "true"       shift, and go to state 65
    T_id         shift, and go to state 38
    T_string     shift, and go to state 39
    T_constInt   shift, and go to state 66
    T_constChar  shift, and go to state 67
    '+'          shift, and go to state 68
    '-'          shift, and go to state 69
    '('          shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 118


State 90

   54 expr: '+' expr .
   56     | expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . "mod" expr
   61     | expr . '=' expr
   62     | expr . "<>" expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . "<=" expr
   66     | expr . ">=" expr
   68     | expr . "and" expr
   69     | expr . "or" expr
   75     | expr . '#' expr

    $default  reduce using rule 54 (expr)


State 91

   55 expr: '-' expr .
   56     | expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . "mod" expr
   61     | expr . '=' expr
   62     | expr . "<>" expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . "<=" expr
   66     | expr . ">=" expr
   68     | expr . "and" expr
   69     | expr . "or" expr
   75     | expr . '#' expr

    $default  reduce using rule 55 (expr)


State 92

   53 expr: '(' expr . ')'
   56     | expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . "mod" expr
   61     | expr . '=' expr
   62     | expr . "<>" expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . "<=" expr
   66     | expr . ">=" expr
   68     | expr . "and" expr
   69     | expr . "or" expr
   75     | expr . '#' expr

    "and"  shift, and go to state 93
    "mod"  shift, and go to state 94
    "or"   shift, and go to state 95
    "<="   shift, and go to state 96
    ">="   shift, and go to state 97
    "<>"   shift, and go to state 98
    '='    shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    ')'    shift, and go to state 119


State 93

   68 expr: expr "and" . expr

    "false"      shift, and go to state 58
    "head"       shift, and go to state 59
    "new"        shift, and go to state 60
    "nil"        shift, and go to state 61
    "nil?"       shift, and go to state 62
    "not"        shift, and go to state 63
    "tail"       shift, and go to state 64
    "true"       shift, and go to state 65
    T_id         shift, and go to state 38
    T_string     shift, and go to state 39
    T_constInt   shift, and go to state 66
    T_constChar  shift, and go to state 67
    '+'          shift, and go to state 68
    '-'          shift, and go to state 69
    '('          shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 120


State 94

   60 expr: expr "mod" . expr

    "false"      shift, and go to state 58
    "head"       shift, and go to state 59
    "new"        shift, and go to state 60
    "nil"        shift, and go to state 61
    "nil?"       shift, and go to state 62
    "not"        shift, and go to state 63
    "tail"       shift, and go to state 64
    "true"       shift, and go to state 65
    T_id         shift, and go to state 38
    T_string     shift, and go to state 39
    T_constInt   shift, and go to state 66
    T_constChar  shift, and go to state 67
    '+'          shift, and go to state 68
    '-'          shift, and go to state 69
    '('          shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 121


State 95

   69 expr: expr "or" . expr

    "false"      shift, and go to state 58
    "head"       shift, and go to state 59
    "new"        shift, and go to state 60
    "nil"        shift, and go to state 61
    "nil?"       shift, and go to state 62
    "not"        shift, and go to state 63
    "tail"       shift, and go to state 64
    "true"       shift, and go to state 65
    T_id         shift, and go to state 38
    T_string     shift, and go to state 39
    T_constInt   shift, and go to state 66
    T_constChar  shift, and go to state 67
    '+'          shift, and go to state 68
    '-'          shift, and go to state 69
    '('          shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 122


State 96

   65 expr: expr "<=" . expr

    "false"      shift, and go to state 58
    "head"       shift, and go to state 59
    "new"        shift, and go to state 60
    "nil"        shift, and go to state 61
    "nil?"       shift, and go to state 62
    "not"        shift, and go to state 63
    "tail"       shift, and go to state 64
    "true"       shift, and go to state 65
    T_id         shift, and go to state 38
    T_string     shift, and go to state 39
    T_constInt   shift, and go to state 66
    T_constChar  shift, and go to state 67
    '+'          shift, and go to state 68
    '-'          shift, and go to state 69
    '('          shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 123


State 97

   66 expr: expr ">=" . expr

    "false"      shift, and go to state 58
    "head"       shift, and go to state 59
    "new"        shift, and go to state 60
    "nil"        shift, and go to state 61
    "nil?"       shift, and go to state 62
    "not"        shift, and go to state 63
    "tail"       shift, and go to state 64
    "true"       shift, and go to state 65
    T_id         shift, and go to state 38
    T_string     shift, and go to state 39
    T_constInt   shift, and go to state 66
    T_constChar  shift, and go to state 67
    '+'          shift, and go to state 68
    '-'          shift, and go to state 69
    '('          shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 124


State 98

   62 expr: expr "<>" . expr

    "false"      shift, and go to state 58
    "head"       shift, and go to state 59
    "new"        shift, and go to state 60
    "nil"        shift, and go to state 61
    "nil?"       shift, and go to state 62
    "not"        shift, and go to state 63
    "tail"       shift, and go to state 64
    "true"       shift, and go to state 65
    T_id         shift, and go to state 38
    T_string     shift, and go to state 39
    T_constInt   shift, and go to state 66
    T_constChar  shift, and go to state 67
    '+'          shift, and go to state 68
    '-'          shift, and go to state 69
    '('          shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 125


State 99

   61 expr: expr '=' . expr

    "false"      shift, and go to state 58
    "head"       shift, and go to state 59
    "new"        shift, and go to state 60
    "nil"        shift, and go to state 61
    "nil?"       shift, and go to state 62
    "not"        shift, and go to state 63
    "tail"       shift, and go to state 64
    "true"       shift, and go to state 65
    T_id         shift, and go to state 38
    T_string     shift, and go to state 39
    T_constInt   shift, and go to state 66
    T_constChar  shift, and go to state 67
    '+'          shift, and go to state 68
    '-'          shift, and go to state 69
    '('          shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 126


State 100

   63 expr: expr '<' . expr

    "false"      shift, and go to state 58
    "head"       shift, and go to state 59
    "new"        shift, and go to state 60
    "nil"        shift, and go to state 61
    "nil?"       shift, and go to state 62
    "not"        shift, and go to state 63
    "tail"       shift, and go to state 64
    "true"       shift, and go to state 65
    T_id         shift, and go to state 38
    T_string     shift, and go to state 39
    T_constInt   shift, and go to state 66
    T_constChar  shift, and go to state 67
    '+'          shift, and go to state 68
    '-'          shift, and go to state 69
    '('          shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 127


State 101

   64 expr: expr '>' . expr

    "false"      shift, and go to state 58
    "head"       shift, and go to state 59
    "new"        shift, and go to state 60
    "nil"        shift, and go to state 61
    "nil?"       shift, and go to state 62
    "not"        shift, and go to state 63
    "tail"       shift, and go to state 64
    "true"       shift, and go to state 65
    T_id         shift, and go to state 38
    T_string     shift, and go to state 39
    T_constInt   shift, and go to state 66
    T_constChar  shift, and go to state 67
    '+'          shift, and go to state 68
    '-'          shift, and go to state 69
    '('          shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 128


State 102

   75 expr: expr '#' . expr

    "false"      shift, and go to state 58
    "head"       shift, and go to state 59
    "new"        shift, and go to state 60
    "nil"        shift, and go to state 61
    "nil?"       shift, and go to state 62
    "not"        shift, and go to state 63
    "tail"       shift, and go to state 64
    "true"       shift, and go to state 65
    T_id         shift, and go to state 38
    T_string     shift, and go to state 39
    T_constInt   shift, and go to state 66
    T_constChar  shift, and go to state 67
    '+'          shift, and go to state 68
    '-'          shift, and go to state 69
    '('          shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 129


State 103

   56 expr: expr '+' . expr

    "false"      shift, and go to state 58
    "head"       shift, and go to state 59
    "new"        shift, and go to state 60
    "nil"        shift, and go to state 61
    "nil?"       shift, and go to state 62
    "not"        shift, and go to state 63
    "tail"       shift, and go to state 64
    "true"       shift, and go to state 65
    T_id         shift, and go to state 38
    T_string     shift, and go to state 39
    T_constInt   shift, and go to state 66
    T_constChar  shift, and go to state 67
    '+'          shift, and go to state 68
    '-'          shift, and go to state 69
    '('          shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 130


State 104

   57 expr: expr '-' . expr

    "false"      shift, and go to state 58
    "head"       shift, and go to state 59
    "new"        shift, and go to state 60
    "nil"        shift, and go to state 61
    "nil?"       shift, and go to state 62
    "not"        shift, and go to state 63
    "tail"       shift, and go to state 64
    "true"       shift, and go to state 65
    T_id         shift, and go to state 38
    T_string     shift, and go to state 39
    T_constInt   shift, and go to state 66
    T_constChar  shift, and go to state 67
    '+'          shift, and go to state 68
    '-'          shift, and go to state 69
    '('          shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 131


State 105

   58 expr: expr '*' . expr

    "false"      shift, and go to state 58
    "head"       shift, and go to state 59
    "new"        shift, and go to state 60
    "nil"        shift, and go to state 61
    "nil?"       shift, and go to state 62
    "not"        shift, and go to state 63
    "tail"       shift, and go to state 64
    "true"       shift, and go to state 65
    T_id         shift, and go to state 38
    T_string     shift, and go to state 39
    T_constInt   shift, and go to state 66
    T_constChar  shift, and go to state 67
    '+'          shift, and go to state 68
    '-'          shift, and go to state 69
    '('          shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 132


State 106

   59 expr: expr '/' . expr

    "false"      shift, and go to state 58
    "head"       shift, and go to state 59
    "new"        shift, and go to state 60
    "nil"        shift, and go to state 61
    "nil?"       shift, and go to state 62
    "not"        shift, and go to state 63
    "tail"       shift, and go to state 64
    "true"       shift, and go to state 65
    T_id         shift, and go to state 38
    T_string     shift, and go to state 39
    T_constInt   shift, and go to state 66
    T_constChar  shift, and go to state 67
    '+'          shift, and go to state 68
    '-'          shift, and go to state 69
    '('          shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 133


State 107

   31 if_statement: "if" expr ':' . stmt_list elsif_statement else_statement "end"

    "exit"    shift, and go to state 33
    "for"     shift, and go to state 34
    "if"      shift, and go to state 35
    "return"  shift, and go to state 36
    "skip"    shift, and go to state 37
    T_id      shift, and go to state 38
    T_string  shift, and go to state 39

    stmt_list      go to state 134
    stmt           go to state 45
    if_statement   go to state 46
    for_statement  go to state 47
    simple         go to state 48
    call           go to state 49
    atom           go to state 50


State 108

   43 call: T_id '(' ')' .

    $default  reduce using rule 43 (call)


State 109

   42 call: T_id '(' expr_list . ')'
   45 expr_list: expr_list . ',' expr

    ')'  shift, and go to state 135
    ','  shift, and go to state 136


State 110

   44 expr_list: expr .
   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . "mod" expr
   61     | expr . '=' expr
   62     | expr . "<>" expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . "<=" expr
   66     | expr . ">=" expr
   68     | expr . "and" expr
   69     | expr . "or" expr
   75     | expr . '#' expr

    "and"  shift, and go to state 93
    "mod"  shift, and go to state 94
    "or"   shift, and go to state 95
    "<="   shift, and go to state 96
    ">="   shift, and go to state 97
    "<>"   shift, and go to state 98
    '='    shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106

    $default  reduce using rule 44 (expr_list)


State 111

   40 simple: atom ":=" expr .
   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . "mod" expr
   61     | expr . '=' expr
   62     | expr . "<>" expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . "<=" expr
   66     | expr . ">=" expr
   68     | expr . "and" expr
   69     | expr . "or" expr
   75     | expr . '#' expr

    "and"  shift, and go to state 93
    "mod"  shift, and go to state 94
    "or"   shift, and go to state 95
    "<="   shift, and go to state 96
    ">="   shift, and go to state 97
    "<>"   shift, and go to state 98
    '='    shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106

    $default  reduce using rule 40 (simple)


State 112

   48 atom: atom '[' expr . ']'
   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . "mod" expr
   61     | expr . '=' expr
   62     | expr . "<>" expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . "<=" expr
   66     | expr . ">=" expr
   68     | expr . "and" expr
   69     | expr . "or" expr
   75     | expr . '#' expr

    "and"  shift, and go to state 93
    "mod"  shift, and go to state 94
    "or"   shift, and go to state 95
    "<="   shift, and go to state 96
    ">="   shift, and go to state 97
    "<>"   shift, and go to state 98
    '='    shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    ']'    shift, and go to state 137


State 113

   36 for_statement: "for" simple_list ';' expr . ';' simple_list ':' stmt_list "end"
   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . "mod" expr
   61     | expr . '=' expr
   62     | expr . "<>" expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . "<=" expr
   66     | expr . ">=" expr
   68     | expr . "and" expr
   69     | expr . "or" expr
   75     | expr . '#' expr

    "and"  shift, and go to state 93
    "mod"  shift, and go to state 94
    "or"   shift, and go to state 95
    "<="   shift, and go to state 96
    ">="   shift, and go to state 97
    "<>"   shift, and go to state 98
    '='    shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    ';'    shift, and go to state 138


State 114

   38 simple_list: simple_list ',' simple .

    $default  reduce using rule 38 (simple_list)


State 115

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . "mod" expr
   61     | expr . '=' expr
   62     | expr . "<>" expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . "<=" expr
   66     | expr . ">=" expr
   68     | expr . "and" expr
   69     | expr . "or" expr
   75     | expr . '#' expr
   76     | "head" '(' expr . ')'

    "and"  shift, and go to state 93
    "mod"  shift, and go to state 94
    "or"   shift, and go to state 95
    "<="   shift, and go to state 96
    ">="   shift, and go to state 97
    "<>"   shift, and go to state 98
    '='    shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    ')'    shift, and go to state 139


State 116

   20 type: type '[' . ']'
   72 expr: "new" type '[' . expr ']'

    "false"      shift, and go to state 58
    "head"       shift, and go to state 59
    "new"        shift, and go to state 60
    "nil"        shift, and go to state 61
    "nil?"       shift, and go to state 62
    "not"        shift, and go to state 63
    "tail"       shift, and go to state 64
    "true"       shift, and go to state 65
    T_id         shift, and go to state 38
    T_string     shift, and go to state 39
    T_constInt   shift, and go to state 66
    T_constChar  shift, and go to state 67
    '+'          shift, and go to state 68
    '-'          shift, and go to state 69
    '('          shift, and go to state 70
    ']'          shift, and go to state 25

    call  go to state 71
    atom  go to state 72
    expr  go to state 140


State 117

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . "mod" expr
   61     | expr . '=' expr
   62     | expr . "<>" expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . "<=" expr
   66     | expr . ">=" expr
   68     | expr . "and" expr
   69     | expr . "or" expr
   74     | "nil?" '(' expr . ')'
   75     | expr . '#' expr

    "and"  shift, and go to state 93
    "mod"  shift, and go to state 94
    "or"   shift, and go to state 95
    "<="   shift, and go to state 96
    ">="   shift, and go to state 97
    "<>"   shift, and go to state 98
    '='    shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    ')'    shift, and go to state 141


State 118

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . "mod" expr
   61     | expr . '=' expr
   62     | expr . "<>" expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . "<=" expr
   66     | expr . ">=" expr
   68     | expr . "and" expr
   69     | expr . "or" expr
   75     | expr . '#' expr
   77     | "tail" '(' expr . ')'

    "and"  shift, and go to state 93
    "mod"  shift, and go to state 94
    "or"   shift, and go to state 95
    "<="   shift, and go to state 96
    ">="   shift, and go to state 97
    "<>"   shift, and go to state 98
    '='    shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    ')'    shift, and go to state 142


State 119

   53 expr: '(' expr ')' .

    $default  reduce using rule 53 (expr)


State 120

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . "mod" expr
   61     | expr . '=' expr
   62     | expr . "<>" expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . "<=" expr
   66     | expr . ">=" expr
   68     | expr . "and" expr
   68     | expr "and" expr .
   69     | expr . "or" expr
   75     | expr . '#' expr

    "mod"  shift, and go to state 94
    "<="   shift, and go to state 96
    ">="   shift, and go to state 97
    "<>"   shift, and go to state 98
    '='    shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106

    $default  reduce using rule 68 (expr)


State 121

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . "mod" expr
   60     | expr "mod" expr .
   61     | expr . '=' expr
   62     | expr . "<>" expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . "<=" expr
   66     | expr . ">=" expr
   68     | expr . "and" expr
   69     | expr . "or" expr
   75     | expr . '#' expr

    $default  reduce using rule 60 (expr)


State 122

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . "mod" expr
   61     | expr . '=' expr
   62     | expr . "<>" expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . "<=" expr
   66     | expr . ">=" expr
   68     | expr . "and" expr
   69     | expr . "or" expr
   69     | expr "or" expr .
   75     | expr . '#' expr

    "and"  shift, and go to state 93
    "mod"  shift, and go to state 94
    "<="   shift, and go to state 96
    ">="   shift, and go to state 97
    "<>"   shift, and go to state 98
    '='    shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106

    $default  reduce using rule 69 (expr)


State 123

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . "mod" expr
   61     | expr . '=' expr
   62     | expr . "<>" expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . "<=" expr
   65     | expr "<=" expr .
   66     | expr . ">=" expr
   68     | expr . "and" expr
   69     | expr . "or" expr
   75     | expr . '#' expr

    "mod"  shift, and go to state 94
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106

    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "<>"  error (nonassociative)
    '='   error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 65 (expr)


State 124

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . "mod" expr
   61     | expr . '=' expr
   62     | expr . "<>" expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . "<=" expr
   66     | expr . ">=" expr
   66     | expr ">=" expr .
   68     | expr . "and" expr
   69     | expr . "or" expr
   75     | expr . '#' expr

    "mod"  shift, and go to state 94
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106

    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "<>"  error (nonassociative)
    '='   error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 66 (expr)


State 125

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . "mod" expr
   61     | expr . '=' expr
   62     | expr . "<>" expr
   62     | expr "<>" expr .
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . "<=" expr
   66     | expr . ">=" expr
   68     | expr . "and" expr
   69     | expr . "or" expr
   75     | expr . '#' expr

    "mod"  shift, and go to state 94
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106

    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "<>"  error (nonassociative)
    '='   error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 62 (expr)


State 126

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . "mod" expr
   61     | expr . '=' expr
   61     | expr '=' expr .
   62     | expr . "<>" expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . "<=" expr
   66     | expr . ">=" expr
   68     | expr . "and" expr
   69     | expr . "or" expr
   75     | expr . '#' expr

    "mod"  shift, and go to state 94
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106

    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "<>"  error (nonassociative)
    '='   error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 61 (expr)


State 127

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . "mod" expr
   61     | expr . '=' expr
   62     | expr . "<>" expr
   63     | expr . '<' expr
   63     | expr '<' expr .
   64     | expr . '>' expr
   65     | expr . "<=" expr
   66     | expr . ">=" expr
   68     | expr . "and" expr
   69     | expr . "or" expr
   75     | expr . '#' expr

    "mod"  shift, and go to state 94
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106

    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "<>"  error (nonassociative)
    '='   error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 63 (expr)


State 128

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . "mod" expr
   61     | expr . '=' expr
   62     | expr . "<>" expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   64     | expr '>' expr .
   65     | expr . "<=" expr
   66     | expr . ">=" expr
   68     | expr . "and" expr
   69     | expr . "or" expr
   75     | expr . '#' expr

    "mod"  shift, and go to state 94
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106

    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "<>"  error (nonassociative)
    '='   error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 64 (expr)


State 129

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . "mod" expr
   61     | expr . '=' expr
   62     | expr . "<>" expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . "<=" expr
   66     | expr . ">=" expr
   68     | expr . "and" expr
   69     | expr . "or" expr
   75     | expr . '#' expr
   75     | expr '#' expr .

    "mod"  shift, and go to state 94
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106

    $default  reduce using rule 75 (expr)


State 130

   56 expr: expr . '+' expr
   56     | expr '+' expr .
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . "mod" expr
   61     | expr . '=' expr
   62     | expr . "<>" expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . "<=" expr
   66     | expr . ">=" expr
   68     | expr . "and" expr
   69     | expr . "or" expr
   75     | expr . '#' expr

    "mod"  shift, and go to state 94
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106

    $default  reduce using rule 56 (expr)


State 131

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   57     | expr '-' expr .
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . "mod" expr
   61     | expr . '=' expr
   62     | expr . "<>" expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . "<=" expr
   66     | expr . ">=" expr
   68     | expr . "and" expr
   69     | expr . "or" expr
   75     | expr . '#' expr

    "mod"  shift, and go to state 94
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106

    $default  reduce using rule 57 (expr)


State 132

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   58     | expr '*' expr .
   59     | expr . '/' expr
   60     | expr . "mod" expr
   61     | expr . '=' expr
   62     | expr . "<>" expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . "<=" expr
   66     | expr . ">=" expr
   68     | expr . "and" expr
   69     | expr . "or" expr
   75     | expr . '#' expr

    $default  reduce using rule 58 (expr)


State 133

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   59     | expr '/' expr .
   60     | expr . "mod" expr
   61     | expr . '=' expr
   62     | expr . "<>" expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . "<=" expr
   66     | expr . ">=" expr
   68     | expr . "and" expr
   69     | expr . "or" expr
   75     | expr . '#' expr

    $default  reduce using rule 59 (expr)


State 134

   25 stmt_list: stmt_list . stmt
   31 if_statement: "if" expr ':' stmt_list . elsif_statement else_statement "end"

    "exit"    shift, and go to state 33
    "for"     shift, and go to state 34
    "if"      shift, and go to state 35
    "return"  shift, and go to state 36
    "skip"    shift, and go to state 37
    T_id      shift, and go to state 38
    T_string  shift, and go to state 39

    $default  reduce using rule 32 (elsif_statement)

    stmt             go to state 78
    if_statement     go to state 46
    elsif_statement  go to state 143
    for_statement    go to state 47
    simple           go to state 48
    call             go to state 49
    atom             go to state 50


State 135

   42 call: T_id '(' expr_list ')' .

    $default  reduce using rule 42 (call)


State 136

   45 expr_list: expr_list ',' . expr

    "false"      shift, and go to state 58
    "head"       shift, and go to state 59
    "new"        shift, and go to state 60
    "nil"        shift, and go to state 61
    "nil?"       shift, and go to state 62
    "not"        shift, and go to state 63
    "tail"       shift, and go to state 64
    "true"       shift, and go to state 65
    T_id         shift, and go to state 38
    T_string     shift, and go to state 39
    T_constInt   shift, and go to state 66
    T_constChar  shift, and go to state 67
    '+'          shift, and go to state 68
    '-'          shift, and go to state 69
    '('          shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 144


State 137

   48 atom: atom '[' expr ']' .

    $default  reduce using rule 48 (atom)


State 138

   36 for_statement: "for" simple_list ';' expr ';' . simple_list ':' stmt_list "end"

    "skip"    shift, and go to state 37
    T_id      shift, and go to state 38
    T_string  shift, and go to state 39

    simple_list  go to state 145
    simple       go to state 57
    call         go to state 49
    atom         go to state 50


State 139

   76 expr: "head" '(' expr ')' .

    $default  reduce using rule 76 (expr)


State 140

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . "mod" expr
   61     | expr . '=' expr
   62     | expr . "<>" expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . "<=" expr
   66     | expr . ">=" expr
   68     | expr . "and" expr
   69     | expr . "or" expr
   72     | "new" type '[' expr . ']'
   75     | expr . '#' expr

    "and"  shift, and go to state 93
    "mod"  shift, and go to state 94
    "or"   shift, and go to state 95
    "<="   shift, and go to state 96
    ">="   shift, and go to state 97
    "<>"   shift, and go to state 98
    '='    shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    ']'    shift, and go to state 146


State 141

   74 expr: "nil?" '(' expr ')' .

    $default  reduce using rule 74 (expr)


State 142

   77 expr: "tail" '(' expr ')' .

    $default  reduce using rule 77 (expr)


State 143

   31 if_statement: "if" expr ':' stmt_list elsif_statement . else_statement "end"
   33 elsif_statement: elsif_statement . "elsif" expr ':' stmt_list

    "else"   shift, and go to state 147
    "elsif"  shift, and go to state 148

    $default  reduce using rule 35 (else_statement)

    else_statement  go to state 149


State 144

   45 expr_list: expr_list ',' expr .
   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . "mod" expr
   61     | expr . '=' expr
   62     | expr . "<>" expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . "<=" expr
   66     | expr . ">=" expr
   68     | expr . "and" expr
   69     | expr . "or" expr
   75     | expr . '#' expr

    "and"  shift, and go to state 93
    "mod"  shift, and go to state 94
    "or"   shift, and go to state 95
    "<="   shift, and go to state 96
    ">="   shift, and go to state 97
    "<>"   shift, and go to state 98
    '='    shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106

    $default  reduce using rule 45 (expr_list)


State 145

   36 for_statement: "for" simple_list ';' expr ';' simple_list . ':' stmt_list "end"
   38 simple_list: simple_list . ',' simple

    ':'  shift, and go to state 150
    ','  shift, and go to state 84


State 146

   72 expr: "new" type '[' expr ']' .

    $default  reduce using rule 72 (expr)


State 147

   34 else_statement: "else" . ':' stmt_list

    ':'  shift, and go to state 151


State 148

   33 elsif_statement: elsif_statement "elsif" . expr ':' stmt_list

    "false"      shift, and go to state 58
    "head"       shift, and go to state 59
    "new"        shift, and go to state 60
    "nil"        shift, and go to state 61
    "nil?"       shift, and go to state 62
    "not"        shift, and go to state 63
    "tail"       shift, and go to state 64
    "true"       shift, and go to state 65
    T_id         shift, and go to state 38
    T_string     shift, and go to state 39
    T_constInt   shift, and go to state 66
    T_constChar  shift, and go to state 67
    '+'          shift, and go to state 68
    '-'          shift, and go to state 69
    '('          shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 152


State 149

   31 if_statement: "if" expr ':' stmt_list elsif_statement else_statement . "end"

    "end"  shift, and go to state 153


State 150

   36 for_statement: "for" simple_list ';' expr ';' simple_list ':' . stmt_list "end"

    "exit"    shift, and go to state 33
    "for"     shift, and go to state 34
    "if"      shift, and go to state 35
    "return"  shift, and go to state 36
    "skip"    shift, and go to state 37
    T_id      shift, and go to state 38
    T_string  shift, and go to state 39

    stmt_list      go to state 154
    stmt           go to state 45
    if_statement   go to state 46
    for_statement  go to state 47
    simple         go to state 48
    call           go to state 49
    atom           go to state 50


State 151

   34 else_statement: "else" ':' . stmt_list

    "exit"    shift, and go to state 33
    "for"     shift, and go to state 34
    "if"      shift, and go to state 35
    "return"  shift, and go to state 36
    "skip"    shift, and go to state 37
    T_id      shift, and go to state 38
    T_string  shift, and go to state 39

    stmt_list      go to state 155
    stmt           go to state 45
    if_statement   go to state 46
    for_statement  go to state 47
    simple         go to state 48
    call           go to state 49
    atom           go to state 50


State 152

   33 elsif_statement: elsif_statement "elsif" expr . ':' stmt_list
   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . "mod" expr
   61     | expr . '=' expr
   62     | expr . "<>" expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . "<=" expr
   66     | expr . ">=" expr
   68     | expr . "and" expr
   69     | expr . "or" expr
   75     | expr . '#' expr

    "and"  shift, and go to state 93
    "mod"  shift, and go to state 94
    "or"   shift, and go to state 95
    "<="   shift, and go to state 96
    ">="   shift, and go to state 97
    "<>"   shift, and go to state 98
    '='    shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    ':'    shift, and go to state 156


State 153

   31 if_statement: "if" expr ':' stmt_list elsif_statement else_statement "end" .

    $default  reduce using rule 31 (if_statement)


State 154

   25 stmt_list: stmt_list . stmt
   36 for_statement: "for" simple_list ';' expr ';' simple_list ':' stmt_list . "end"

    "end"     shift, and go to state 157
    "exit"    shift, and go to state 33
    "for"     shift, and go to state 34
    "if"      shift, and go to state 35
    "return"  shift, and go to state 36
    "skip"    shift, and go to state 37
    T_id      shift, and go to state 38
    T_string  shift, and go to state 39

    stmt           go to state 78
    if_statement   go to state 46
    for_statement  go to state 47
    simple         go to state 48
    call           go to state 49
    atom           go to state 50


State 155

   25 stmt_list: stmt_list . stmt
   34 else_statement: "else" ':' stmt_list .

    "exit"    shift, and go to state 33
    "for"     shift, and go to state 34
    "if"      shift, and go to state 35
    "return"  shift, and go to state 36
    "skip"    shift, and go to state 37
    T_id      shift, and go to state 38
    T_string  shift, and go to state 39

    $default  reduce using rule 34 (else_statement)

    stmt           go to state 78
    if_statement   go to state 46
    for_statement  go to state 47
    simple         go to state 48
    call           go to state 49
    atom           go to state 50


State 156

   33 elsif_statement: elsif_statement "elsif" expr ':' . stmt_list

    "exit"    shift, and go to state 33
    "for"     shift, and go to state 34
    "if"      shift, and go to state 35
    "return"  shift, and go to state 36
    "skip"    shift, and go to state 37
    T_id      shift, and go to state 38
    T_string  shift, and go to state 39

    stmt_list      go to state 158
    stmt           go to state 45
    if_statement   go to state 46
    for_statement  go to state 47
    simple         go to state 48
    call           go to state 49
    atom           go to state 50


State 157

   36 for_statement: "for" simple_list ';' expr ';' simple_list ':' stmt_list "end" .

    $default  reduce using rule 36 (for_statement)


State 158

   25 stmt_list: stmt_list . stmt
   33 elsif_statement: elsif_statement "elsif" expr ':' stmt_list .

    "exit"    shift, and go to state 33
    "for"     shift, and go to state 34
    "if"      shift, and go to state 35
    "return"  shift, and go to state 36
    "skip"    shift, and go to state 37
    T_id      shift, and go to state 38
    T_string  shift, and go to state 39

    $default  reduce using rule 33 (elsif_statement)

    stmt           go to state 78
    if_statement   go to state 46
    for_statement  go to state 47
    simple         go to state 48
    call           go to state 49
    atom           go to state 50
